/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.Solutionleft = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    static TreeNode fun(int[] pre,int[] in,int ps,int pe,int is,int ie){
        if(ps>pe ||is>ie)return null;
        TreeNode root=new TreeNode(pre[ps]);
        int i=-1;
        for(i =is;i<=ie;i++){
            if(in[i]==pre[ps])
                break;
        }
        int count=i-is;
        root.left=fun(pre,in,ps+1,ps+count,is,i-1);
        root.right=fun(pre,in,ps+count+1,pe,i+1,ie);
        return root;
    }
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return fun(preorder,inorder,0,preorder.length-1,0,preorder.length-1);
    }
}
