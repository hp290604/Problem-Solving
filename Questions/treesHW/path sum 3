class Solution {
    static int c=0;
    static void fun(TreeNode root,long sum,int tsum){
        if(root==null)return;
        if(sum-root.val==0)c++;
        // if(root.left!=null){
        fun(root.left,sum-root.val,tsum);
        // fun(root,tsum,tsum);
        fun(root.right,sum-root.val,tsum);
        // fun(root,tsum,tsum);
        
    }
    public int pathSum(TreeNode root, int targetSum) {
        if(root==null )return 0;
        c=0;
        Queue<TreeNode > q=new LinkedList<>();
        q.offer(root);
        while(!q.isEmpty()){
            TreeNode ptr=q.poll();
            if(ptr.left!=null)q.offer(ptr.left);
            if(ptr.right!=null)q.offer(ptr.right);
            fun(ptr,targetSum,targetSum);
        }
        
        return c;
    }
}
