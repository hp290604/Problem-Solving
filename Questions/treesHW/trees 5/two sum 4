/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean findTarget(TreeNode root, int k) {
        HashSet<Integer> hash=new HashSet<>();
        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root);
        while(!q.isEmpty()){
            int kk=q.peek().val;
            
            if(hash.contains(k-kk))return true;
            hash.add(kk);
            if(q.peek().left!=null)q.offer(q.peek().left);
            if(q.peek().right!=null)q.offer(q.peek().right);
            q.poll();
            // System.out.println(hash);
        }
        return false;
    }
}
