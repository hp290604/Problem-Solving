class Solution {
    public void solve(char[][] board) {
        int[][] b=new int[board.length][board[0].length];
        Queue<int[]> q=new LinkedList<>();
        for(int i=0;i<board[0].length;i++){
            if(board[0][i]=='O'){
                q.offer(new int[]{0, i});
            }
            if(board[board.length-1][i]=='O'){
                q.offer(new int[]{board.length-1, i});
            }
        }
        for(int i=0;i<board.length;i++){
            if(board[i][0]=='O')q.offer(new int[]{i, 0});
            if(board[i][board[0].length-1]=='O')q.offer(new int[]{i, board[0].length-1});
        }
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(board[i][j]=='X')b[i][j]=-1;
            }
        }
        while(!q.isEmpty()){
            int[] a=q.poll();
            b[a[0]][a[1]]=-1;
            if((a[0]+1)<board.length && board[a[0]+1][a[1]]=='O' && b[a[0]+1][a[1]]==0)q.offer(new int[]{a[0]+1, a[1]});
            if((a[0]-1)>=0 && board[a[0]-1][a[1]]=='O'  && b[a[0]-1][a[1]]==0)q.offer(new int[]{a[0]-1, a[1]});
            if((a[1]+1)<board[0].length && board[a[0]][a[1]+1]=='O'  && b[a[0]][a[1]+1]==0)q.offer(new int[]{a[0], a[1]+1});
            if((a[1]-1)>=0 && board[a[0]][a[1]-1]=='O'  && b[a[0]][a[1]-1]==0)q.offer(new int[]{a[0], a[1]-1});
            
        }       
//         for(int i=1;i<board.length-1;i++){
//             int con=0;
//             for(int j=1;j<board[i].length-1;j++){
//                 if(board[i][j]=='O'){
//                     int count=0;
//                     if(i+1<board.length && j+1<board.length && i-1>=0 && j-1>=0){
//                         if(board[i+1][j]=='X'){
//                             count++;
//                         }
//                         if(board[i][j+1]=='X'){
//                             count++;
//                         }
//                         if(board[i-1][j]=='X')count++;
//                         if(board[i][j-1]=='X')count++;
//                     }
//                     if(count>0){
//                         b[i][j]=true;
//                     }
//                 }
            
//             }
//         }
    
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(b[i][j]==0){
                    board[i][j]='X';
                }
            }
        }
    }
}
