class pair{
    int r,c,wt;
    pair(int r,int c,int wt){
        this.r=r;
        this.c=c;
        this.wt=wt;
    }
}
class Solution
{
    //Function to find distance of nearest 1 in the grid for each cell.
    public int[][] nearest(int[][] g)
    {
        // Code here
        int n=g.length,m=g[0].length;
        int[][] vis=new int[n][m];
        int[][] ans=new int[n][m];
        Queue<pair> q=new LinkedList<>();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(g[i][j]==1){
                    q.offer(new pair(i,j,0));
                    vis[i][j]=1;
                }
            }
        }
        int[] dx=new int[]{1,0,0,-1};
        int[] dy=new int[]{0,1,-1,0};
        while(!q.isEmpty()){
            pair p=q.poll();
            int x=p.r;
            int y=p.c,wt=p.wt;
            for(int i=0;i<4;i++){
                int nx=x+dx[i];
                int ny=y+dy[i];
                if(nx>=0 && nx<n && ny>=0 && ny<m && vis[nx][ny]==0){
                    q.offer(new pair(nx,ny,wt+1));
                    ans[nx][ny]=wt+1;
                    vis[nx][ny]=1;
                }
            }
        }
        return ans;
    }
