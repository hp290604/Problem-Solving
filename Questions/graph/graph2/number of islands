class Solution {
    static int max=0;
    public int numIslands(char[][] grid) {
        int[][] vis=new int[grid.length][grid[0].length];
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(grid[i][j]=='1' && vis[i][j]==0){
                    ret(grid,vis,i,j);
                    max++;
                    // System.out.println("hi");
                }
            }
        }
        int m=max;
        max=0;
        return m;
    }
    static void ret(char[][] grid,int [][] vis,int i,int j){
        vis[i][j]=1;
        // temp+=1;
        if(i-1>=0 && vis[i-1][j]==0 && grid[i-1][j]=='1')ret(grid,vis,i-1,j);
        if(i+1<grid.length && vis[i+1][j]==0 && grid[i+1][j]=='1')ret(grid,vis,i+1,j);
        if(j-1>=0 && vis[i][j-1]==0 && grid[i][j-1]=='1')ret(grid,vis,i,j-1);
        if(j+1<grid[0].length && vis[i][j+1]==0 && grid[i][j+1]=='1')ret(grid,vis,i,j+1);
        
    }
}
