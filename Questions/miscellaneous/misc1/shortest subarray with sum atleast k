class Solution {
    public int shortestSubarray(int[] nums, int k) {
        long[] sum=new long[nums.length+1];
        int ans=Integer.MAX_VALUE;
        for(int i=0;i<nums.length;i++){
            sum[i+1]=sum[i]+(long)nums[i];
        }
        PriorityQueue<Integer> pq=new PriorityQueue<>((a,b)->Long.compare(sum[a],sum[b]));
        for(int i=0;i<sum.length;i++){
            while(!pq.isEmpty() && (long)sum[i]-(long)sum[pq.peek()]>=(long)k){
                ans=Math.min(i-pq.peek(),ans);
                pq.poll();
            }
            
            
            pq.offer(i);
        }
        return ans==Integer.MAX_VALUE?-1:ans;
    }
}
