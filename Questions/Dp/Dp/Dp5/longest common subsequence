class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int m=text1.length();
        int n=text2.length();
        int[][] dp=new int[m+1][n+1];
        for(int i=0;i<=m;i++){
            Arrays.fill(dp[i],-1);
        }
        int max=fu(text1,text2,dp,m,n);
        return max;
    }
    static int fu(String s1,String s2,int[][] dp,int m,int n){
        if(m==0 || n==0){
            return 0;
        }
        if(dp[m][n]!=-1)return dp[m][n];
        if(s1.charAt(m-1)==s2.charAt(n-1)){
            dp[m][n]=1+fu(s1,s2,dp,m-1,n-1);
            return dp[m][n];
        }
        dp[m][n]=Math.max(fu(s1,s2,dp,m-1,n),fu(s1,s2,dp,m,n-1));
        return dp[m][n];
    }
}
