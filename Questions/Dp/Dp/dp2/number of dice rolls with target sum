class Solution {
    static int max=0;
    static int mod=1000000007;
    static int fun(int n,int k,int target,int[][] dp){
        if(n<0)return 0;
        if(dp[n][target]!=-1){
            return dp[n][target];
        }
        int ans=0;
        for(int i=1;i<=k;i++){
            if(target-i>=0){
                ans=(ans%mod + fun(n-1,k,target-i,dp)%mod)%mod;
            }
        }
        dp[n][target]=ans;
        return dp[n][target];a
        
    }
    public int numRollsToTarget(int n, int k, int target) {
        max=0;
        int[][] dp=new int[n+1][target+1];
        for(int[] i:dp)Arrays.fill(i,-1);
        dp[0][0]=1;
        for(int i=1;i<=n;i++)dp[i][0]=0;
        for(int i=1;i<=dp[0].length-1;i++)dp[0][i]=0;
        fun(n,k,target,dp);
        return dp[n][target];
    }
}
