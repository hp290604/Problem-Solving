class Solution {
    public int maxProduct(int[] nums) {
        int[] dp=new int[nums.length];
        dp[0]=nums[0];
        int ans=Integer.MIN_VALUE;
        ans=Math.max(ans,nums[0]);
        int cur=nums[0]==0?1:nums[0];
        for(int i=1;i<nums.length;i++){
            if(nums[i]==0){
                dp[i]=Math.max(dp[i-1],Math.max(0,cur));
                cur=1;
            }
            else{
                cur*=nums[i];
                
                dp[i]=Math.max(dp[i-1],Math.max(nums[i],cur));
                
            }
            ans=Math.max(ans,dp[i]);
            
        }
        // int[] dp2=new int[];
        cur=nums[nums.length-1]!=0?nums[nums.length-1]:1;
        Arrays.fill(dp,0);
        dp[dp.length-1]=nums[dp.length-1];
        ans=Math.max(nums[dp.length-1],ans);
        for(int i=dp.length-2;i>=0;i--){
            if(nums[i]==0){
                dp[i]=Math.max(Math.max(0,cur),dp[i+1]);
                cur=1;
            }
            else{
                cur*=nums[i];
                
                dp[i]=Math.max(dp[i+1],Math.max(nums[i],cur));
                
            }
            ans=Math.max(dp[i],ans);
        }
        
        return ans;
    }
}
