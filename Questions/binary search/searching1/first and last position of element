class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] a=new int[2];
        int b=-1,e=-1;
        int l=0,r=nums.length-1;
        while(l<=r){
            int mid=l+(r-l)/2;
            if(nums[mid]==target){
                b=b==-1?mid:mid<b?mid:b;
                r=mid-1;
                // for(int i=mid-1;i>=0;i--){
                //     if(nums[i]==target)b=i;
                //     else break;
                // }
                // for(int i=mid+1;i<nums.length;i++){
                //     if(nums[i]==target)e=i;
                //     else break;
                // }
                // break;
            }
            else if(nums[mid]<target)l=mid+1;
            else r=mid-1;
        }
        l=0;
        r=nums.length-1;
        while(l<=r){
            int mid=l+(r-l)/2;
            if(nums[mid]==target){
                e=e==-1?mid:mid>e?mid:e;
                l=mid+1;
                // for(int i=mid-1;i>=0;i--){
                //     if(nums[i]==target)b=i;
                //     else break;
                // }
                // for(int i=mid+1;i<nums.length;i++){
                //     if(nums[i]==target)e=i;
                //     else break;
                // }
                // break;
            }
            else if(nums[mid]<target)l=mid+1;
            else r=mid-1;
        }
        a[0]=b;
        a[1]=e;
        return a;
    }
}
