class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int i=0;
        int j=0;
        while(i<matrix.length){
            if(j==matrix[0].length){
                i++;
                j=0;
            }
            else if(matrix[i][j]==target){
                return true;
            }
            else j++;
        }
        return false;
        // int i=0;
        // int j=matrix.length;
        // if(matrix.length==1){
        //     return matrix[0][0]==target?true:false;
        // }
        // for(i=0;i<matrix.length;i++){
        //     System.out.println(5);
        //     if(target>=matrix[i][0] && target<=matrix[i][matrix[i].length-1]){
        //         int t=0;
        //         int f=matrix[i].length;
        //         System.out.println(5);
        //         return binary(matrix,i,target,t,matrix[i].length-1);
        //     }
            
        // }

        // return false;



        
    }
    static boolean binary(int[][] matrix,int i,int target,int t,int f){
        System.out.println(5);
        if(t<=f){
            
            int mid=t+(f-t)/2;
            if(matrix[i][mid]==target)return true;
            else if(matrix[i][mid]>target){
                f=mid-1;
                binary(matrix,i,target,t,f);
                System.out.println(f);
            }
            else{
                t=mid+1;
                System.out.println(t);
                binary(matrix,i,target,t,f);
            }
        }
        return false;
    }
}
